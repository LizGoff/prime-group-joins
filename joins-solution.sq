--Get all customers and their addresses.

SELECT * FROM "addresses" 
JOIN "customers" ON "addresses"."customer_id" = "customers"."id"
ORDER BY "addresses"."customer_id";

--Get all orders and their line items.

SELECT * FROM "orders" 
JOIN "line_items" ON "orders"."id" = "line_items"."id"
ORDER BY "orders"."id";

--Which warehouses have cheetos?

SELECT "warehouse_product"."product_id"=5, "warehouse_product"."warehouse_id"
FROM "warehouse_product";

and also

SELECT * FROM "warehouse_product" 
WHERE "product_id"=5;

--Which warehouses have diet pepsi?

SELECT "warehouse_product"."product_id"=6, "warehouse_product"."warehouse_id"
FROM "warehouse_product";

and also
 
SELECT * FROM "warehouse_product" 
WHERE "product_id"=6;

--Get the number of orders for each customer. NOTE: It is OK if those without orders are not included in results.

SELECT "customers"."id" AS "customer_id", COUNT(*) AS "orders"
FROM "customers"
JOIN "addresses" ON "addresses"."customer_id" = "customers"."id"
JOIN "orders" ON "orders"."address_id" = "addresses"."id"
GROUP BY "customers"."id";

--How many customers do we have?

SELECT COUNT (*) FROM "customers";

--How many products do we carry?

SELECT COUNT (*) AS "number_of_customers" FROM "products";

--What is the total available on-hand quantity of diet pepsi?

This works, but doesn't show a total, 
SELECT "warehouse_product"."product_id"=6, "warehouse_product"."on_hand"
FROM "warehouse_product";

So, we will need to merge and sum to get total info.
SELECT SUM("warehouse_product"."on_hand") AS "diet_pepsi_on_hand"
FROM "warehouse_product"
JOIN "products" ON "warehouse_product"."product_id" = "products"."id"
WHERE "products"."id" = '6';

or it could be done by count. This was fun! It is like a giant puzzle!


